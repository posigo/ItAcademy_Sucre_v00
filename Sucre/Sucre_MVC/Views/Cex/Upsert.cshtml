@using Sucre_Utility
@model Sucre_Models.CexM
@{
    Layout = "_Layout";
    if (TempData["FieldIsEmpty"] != null)
    {
        <div class="alert alert-danger text-center">
            @TempData["FieldIsEmpty"]
        </div>
    }    
    var title = "";
    if (Model.Id == 0)
    {
        ViewData["Title"] = "Cex - Create";
        title = "Add Metering Point Location";
    }
    else
    {
        ViewData["Title"] = "Cex - Edit";
        title = $"Edit Metering Point Location ({Model.Id.ToString()})";
    }

}

<div class="container">
    <form method="post" asp-action="Upsert" enctype="multipart/form-data">
        @if (Model.Id !=0)
        {
            @Html.HiddenFor(model => model.Id)
            @* <input asp-for="@Model.Id" hidden> *@
        }
        <div class="row card p-3 bg-white box-shadow">
            <div class="card-header">
                @* <h2 class="text-primary pl-3">Add Parameter Type</h2>                 *@
                <h2 class="text-primary-custom pl-3">@title</h2>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-8">
                        <div class="row form-floating mb-3 py-1">
                            @Html.TextBoxFor(model => model.Management,null, new{@class="form-control", @type="text", @id="Management"})
                            @Html.LabelFor(model => model.Management, "Enter the name of the management department", new{@for="Management"})
                            @Html.ValidationMessageFor(model => model.Management, null, new{@class="text-danger"})
                        </div>
                        <div class="row form-floating mb-3 py-1">
                            @Html.TextBoxFor(model => model.CexName,null, new{@class="form-control", @type="text", @id="CexName"})
                            @Html.LabelFor(model => model.CexName, "Enter the name of the cex", new{@for="CexName"})
                            @Html.ValidationMessageFor(model => model.CexName, null, new{@class="text-danger"})
                        </div>
                        <div class="row form-floating mb-3 py-1">
                            @Html.TextBoxFor(model => model.Area,null, new{@class="form-control", @type="text", @id="Area"})
                            @Html.LabelFor(model => model.Area, "Enter the name of the area", new{@for="Area"})
                            @Html.ValidationMessageFor(model => model.Area, null, new{@class="text-danger"})
                        </div>
                        <div class="row form-floating mb-3 py-1">
                            @Html.TextBoxFor(model => model.Device,null, new{@class="form-control", @type="text", @id="Device"})
                            @Html.LabelFor(model => model.Device, "Enter the name of the device", new{@for="Device"})
                            @Html.ValidationMessageFor(model => model.Device, null, new{@class="text-danger"})
                        </div>
                        <div class="row form-floating mb-3 py-1">
                            @Html.TextBoxFor(model => model.Location,null, new{@class="form-control", @type="text", @id="Location"})                            
                            @Html.LabelFor(model => model.Location, "Enter the location", new{@for="Location"})                            
                            @Html.ValidationMessageFor(model => model.Location, null, new{@class="text-danger"})
                        </div>
@*
                        <div class="row py-2">
                            <div class="col-4">
                                @Html.LabelFor(model => model.Management, null, null)
                                <label asp-for="Management"></label>
                            </div>
                            <div class="col-8">
                                @Html.TextBoxFor(model => model.Management,null, new{@class="form-control"})
                                <input asp-for="Management" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Management, null, new{@class="text-danger"})
                                 <span asp-validation-for="Management" class="text-danger"></span> 
                            </div>
                        </div>
                        <div class="row py-2">
                            <div class="col-4">
                                @Html.LabelFor(model => model.CexName, null, null)
                                <label asp-for="CexName"></label>
                            </div>
                            <div class="col-8">
                                @Html.TextBoxFor(model => model.CexName,null, new{@class="form-control"})
                                <input asp-for="CexName" class="form-control" />
                                @Html.ValidationMessageFor(model => model.CexName, null, new{@class="text-danger"})
                                 <span asp-validation-for="CexName" class="text-danger"></span> 
                            </div>
                        </div>
                        <div class="row py-2">
                            <div class="col-4">
                                @Html.LabelFor(model => model.Area, null, null)
                                <label asp-for="Area"></label>
                            </div>
                            <div class="col-8">
                                @Html.TextBoxFor(model => model.Area,null, new{@class="form-control"})
                                <input asp-for="Area" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Area, null, new{@class="text-danger"})
                                 <span asp-validation-for="Area" class="text-danger"></span> 
                            </div>
                        </div>
                        <div class="row py-2">
                            <div class="col-4">
                                @Html.LabelFor(model => model.Device, null, null)
                                <label asp-for="Device"></label>
                            </div>
                            <div class="col-8">
                                @Html.TextBoxFor(model => model.Device,null, new{@class="form-control"})
                                <input asp-for="Device" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Device, null, new{@class="text-danger"})
                                 <span asp-validation-for="Device" class="text-danger"></span> 
                            </div>
                        </div>
                        <div class="row py-2">
                            <div class="col-4">
                                @Html.LabelFor(model => model.Location, null, null)
                                <label asp-for="Location"></label>
                            </div>
                            <div class="col-8">
                                @Html.TextBoxFor(model => model.Location,null, new{@class="form-control"})
                                <input asp-for="Location" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Location, null, new{@class="text-danger"})
                                 <span asp-validation-for="Location" class="text-danger"></span> 
                            </div>
                        </div>
*@
                    </div>
                    <div class="col-4">
                        Keep
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row py-2">
                    <div class="col">
                        @if (Model.Id !=0)
                        {
                            if (User.IsInRole(WC.AdminRole) || User.IsInRole(WC.SupervisorRole))
                            {
                                <input type="submit" class="btn btn-success w-100" value="Update" />
                            }
                            else
                            {
                                <input type="submit" class="btn btn-success w-100" value="Update" disabled="disabled" />
                            }
                            @* var qw = User.Claims.FirstOrDefault(i => i.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role").Value.ToString(); *@                            
                        }
                        else
                        {
                            <input type="submit" class="btn btn-success w-100" value="Create" />    
                        }                        
                    </div>
                    <div class="col">
                        <a asp-action="Index" class="btn btn-secondary w-100">
                            Back
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
